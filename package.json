{
  "author": "Wire Swiss <wireapp@wire.com>",
  "dependencies": {
    "@electron/remote": "2.1.2",
    "@hapi/joi": "17.1.1",
    "@wireapp/certificate-check": "0.7.11",
    "@wireapp/commons": "5.2.7",
    "@wireapp/protocol-messaging": "1.46.0",
    "@wireapp/react-ui-kit": "9.17.0",
    "@wireapp/webapp-events": "0.20.1",
    "auto-launch": "5.0.6",
    "axios": "0.21.2",
    "content-type": "1.0.5",
    "electron-dl": "^3.5.2",
    "electron-window-state": "5.0.3",
    "fs-extra": "11.2.0",
    "get-proxy-settings": "0.1.13",
    "globby": "11.1",
    "iconv-lite": "0.6.3",
    "image-type": "4.1.0",
    "jszip": "3.10.1",
    "lodash": "4.17.21",
    "logdown": "3.3.1",
    "minimist": "1.2.8",
    "open-graph": "0.2.6",
    "react": "18.2.0",
    "react-dom": "18.2.0",
    "react-redux": "8.1.3",
    "redux": "4.2.1",
    "redux-logger": "3.0.6",
    "redux-thunk": "2.4.2",
    "uuidjs": "4.2.12"
  },
  "description": "The most secure collaboration platform.",
  "devDependencies": {
    "@babel/core": "7.24.3",
    "@babel/helper-string-parser": "7.24.1",
    "@babel/plugin-proposal-class-properties": "7.18.6",
    "@babel/plugin-proposal-optional-chaining": "7.21.0",
    "@babel/preset-env": "7.24.3",
    "@babel/preset-react": "7.24.1",
    "@babel/preset-typescript": "7.24.1",
    "@babel/register": "7.23.7",
    "@electron/fuses": "1.8.0",
    "@electron/osx-sign": "1.1.0",
    "@types/adm-zip": "0.5.5",
    "@types/amplify": "1.1.28",
    "@types/auto-launch": "5.0.5",
    "@types/content-type": "1.1.8",
    "@types/eslint": "^8.56.6",
    "@types/fs-extra": "11.0.4",
    "@types/hapi__joi": "^17.1.14",
    "@types/is-ci": "3.0.4",
    "@types/jest": "^29.5.12",
    "@types/lodash": "4.17.0",
    "@types/minimist": "1.2.5",
    "@types/mocha": "10.0.6",
    "@types/node": "18.19.28",
    "@types/open-graph": "0.2.5",
    "@types/platform": "1.3.6",
    "@types/prettier": "^2.7.3",
    "@types/react": "^18.2.73",
    "@types/react-dom": "^18.2.23",
    "@types/redux-logger": "^3.0.12",
    "@types/sinon": "17.0.3",
    "@types/sort-json": "2.0.3",
    "@typescript-eslint/eslint-plugin": "7.4.0",
    "@typescript-eslint/parser": "7.4.0",
    "@wireapp/copy-config": "1.3.6",
    "@wireapp/eslint-config": "3.0.7",
    "@wireapp/prettier-config": "0.6.4",
    "adm-zip": "0.5.12",
    "aws-sdk": "2.1588.0",
    "babel-core": "7.0.0-bridge.0",
    "babel-eslint": "10.1.0",
    "babel-jest": "29.7.0",
    "babel-loader": "9.1.3",
    "babel-plugin-istanbul": "6.1.1",
    "commander": "12.0.0",
    "core-js": "3.36.1",
    "cross-env": "7.0.3",
    "css-loader": "6.10.0",
    "dotenv": "16.4.5",
    "electron": "29.1.6",
    "electron-builder": "24.13.3",
    "electron-mocha": "12.2.0",
    "electron-packager": "17.1.2",
    "electron-winstaller": "4.0.1",
    "eslint": "8.57.0",
    "eslint-config-prettier": "9.1.0",
    "eslint-import-resolver-alias": "^1.1.2",
    "eslint-import-resolver-typescript": "^3.6.1",
    "eslint-plugin-better-styled-components": "1.1.2",
    "eslint-plugin-header": "3.1.1",
    "eslint-plugin-import": "^2.29.1",
    "eslint-plugin-jasmine": "4.1.3",
    "eslint-plugin-jest": "27.9.0",
    "eslint-plugin-jest-dom": "5.2.0",
    "eslint-plugin-jsdoc": "48.2.2",
    "eslint-plugin-jsx-a11y": "6.8.0",
    "eslint-plugin-no-unsanitized": "4.0.2",
    "eslint-plugin-prettier": "4.2.1",
    "eslint-plugin-react": "7.34.1",
    "eslint-plugin-react-hooks": "4.6.0",
    "eslint-plugin-simple-import-sort": "12.0.0",
    "eslint-plugin-testing-library": "6.2.0",
    "eslint-plugin-unused-imports": "3.1.0",
    "form-data": "4.0.0",
    "husky": "4.3.8",
    "is-ci": "3.0.1",
    "jest": "29.7.0",
    "jest-environment-jsdom": "29.7.0",
    "lint-staged": "15.2.2",
    "mocha": "10.4.0",
    "nock": "13.5.4",
    "nyc": "15.1.0",
    "prettier": "2.8.8",
    "rimraf": "5.0.5",
    "sinon": "17.0.1",
    "sort-json": "2.0.1",
    "style-loader": "3.3.4",
    "ts-node": "10.9.2",
    "typescript": "5.4.3",
    "webpack": "5.91.0",
    "webpack-cli": "5.1.4"
  },
  "homepage": "https://wire.com",
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged"
    }
  },
  "license": "GPL-3.0",
  "lint-staged": {
    "*.{js,jsx,ts}": [
      "eslint --fix"
    ],
    "*.{json,md,css,yml,html}": [
      "prettier --write"
    ]
  },
  "main": "electron/dist/main.js",
  "name": "wire-desktop",
  "prettier": "@wireapp/prettier-config",
  "private": true,
  "productName": "WireDevelopment",
  "repository": {
    "type": "git",
    "url": "https://github.com/wireapp/wire-desktop.git"
  },
  "scripts": {
    "build:linux": "yarn build:prepare && ts-node -P tsconfig.bin.json ./bin/build-tools/build-cli.ts linux",
    "build:linux:internal": "cross-env-shell APP_ENV=internal \"yarn configure && yarn build:linux\"",
    "build:macos": "yarn build:prepare && ts-node -P tsconfig.bin.json ./bin/build-tools/build-cli.ts macos -m",
    "build:macos:x64": "yarn build:macos -a x64",
    "build:macos:arm64": "yarn build:macos -a arm64",
    "build:macos:internal": "cross-env-shell APP_ENV=internal \"yarn configure && yarn build:macos\"",
    "build:macos:internal:x64": "yarn build:macos:internal -a x64",
    "build:macos:internal:arm64": "yarn build:macos:internal -a arm64",
    "build:prepare": "yarn clear:wrap && yarn build:ts && yarn bundle",
    "build:ts": "yarn clear:ts && tsc -P tsconfig.build.json",
    "build:ts:bin": "tsc -P tsconfig.bin.json --noEmit",
    "build:ts:tests": "tsc -P tsconfig.mocha.json --noEmit",
    "build:win": "yarn build:prepare && ts-node -P tsconfig.bin.json ./bin/build-tools/build-cli.ts windows",
    "build:win:installer": "rimraf wrap/dist && ts-node -P tsconfig.bin.json ./bin/build-tools/build-cli.ts windows-installer",
    "build:win:installer:internal": "cross-env-shell APP_ENV=internal \"yarn build:win:installer -m\"",
    "build:win:internal": "cross-env-shell APP_ENV=internal \"yarn configure && yarn build:win\"",
    "build:win:ia32": "yarn build:win -a ia32",
    "build:win:installer:internal:ia32": "cross-env-shell APP_ENV=internal \"yarn build:win:installer:ia32 -m\"",
    "build:win:installer:ia32": "rimraf wrap/dist && yarn build:win -a ia32 && ts-node -P tsconfig.bin.json ./bin/build-tools/build-cli.ts windows-installer -a ia32",
    "bundle": "webpack --env production",
    "bundle:dev": "webpack",
    "clear:coverage": "rimraf coverage",
    "clear:ts": "rimraf electron/dist",
    "clear:wrap": "rimraf wrap",
    "configure": "copy-config",
    "coverage": "yarn clear:coverage && nyc report",
    "fix": "yarn fix:code && yarn fix:other",
    "fix:code": "yarn lint:code --fix",
    "fix:other": "yarn prettier --write",
    "lint": "yarn lint:code && yarn lint:other",
    "lint:code": "eslint --ignore-path .gitignore --ext .js,.jsx,.ts,.tsx .",
    "lint:other": "yarn prettier --list-different",
    "postinstall": "yarn configure",
    "prestart": "yarn build:ts && yarn bundle:dev",
    "prettier": "prettier \"**/*.{json,md,css,yml,html}\"",
    "start": "yarn prestart && cross-env NODE_DEBUG='@wireapp*' electron . --no-sandbox --inspect --devtools --enable-logging",
    "start:dev": "yarn start --env=https://wire-webapp-dev.zinfra.io",
    "start:proxy": "yarn start --env=https://wire-webapp-dev.zinfra.io --proxy-server=\"https://127.0.0.1:3128\"",
    "start:edge": "yarn start --env=https://wire-webapp-edge.zinfra.io",
    "start:internal": "yarn start --env=https://wire-webapp-staging.wire.com",
    "start:localzinfra": "yarn start --env=https://local.zinfra.io:8081",
    "start:prod": "yarn start --env=https://app.wire.com",
    "start:rc": "yarn start --env=https://wire-webapp-rc.zinfra.io",
    "test": "yarn test:types && yarn prestart && yarn build:ts:tests && yarn test:react && yarn test:main && yarn test:renderer && yarn test:bin",
    "test:bin": "mocha --require .babel-register.js \"bin/**/*.test?(.main).ts\"",
    "test:main": "electron-mocha --require .babel-register.js \"electron/src/**/*.test?(.main).ts\" --no-sandbox",
    "test:renderer": "electron-mocha --renderer --require .babel-register.js \"electron/src/**/*.test?(.renderer).ts\" --no-sandbox --window-config electron/test/mocha-window-config.json",
    "test:types": "tsc --noEmit",
    "test:react": "jest",
    "translate:upload": "ts-node -P tsconfig.bin.json ./bin/translations_upload.ts",
    "translate:download": "ts-node -P tsconfig.bin.json ./bin/translations_download.ts"
  },
  "version": "3.34.0",
  "packageManager": "yarn@3.3.1"
}
